{"version":3,"file":"elementryx-components.js","sources":["../src/ex-button.js","../src/ex-dropdown.js"],"sourcesContent":["class ExButton extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n\r\n    const button = document.createElement('button');\r\n    button.classList.add('ex-button');\r\n\r\n    // Set button label\r\n    button.textContent = this.getAttribute('label') || 'Click Me';\r\n\r\n    // Event listener for button click\r\n    button.addEventListener('click', (event) => {\r\n      this.createRipple(event);\r\n      this.toggleDarkMode();\r\n    });\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        --primary-color: #1a5cff; /* Button color */\r\n        --text-color-light: white; /* Text color for light mode */\r\n        --text-color-dark: black; /* Text color for dark mode */\r\n        --transition-duration: 0.3s;\r\n      }\r\n\r\n      :host([dark]) {\r\n        --primary-color: #005bb5; /* Darker shade for dark mode */\r\n        --text-color-light: white; /* Text color for dark mode */\r\n        --text-color-dark: white; /* Text color for dark mode */\r\n      }\r\n\r\n      .ex-button {\r\n        position: relative;\r\n        overflow: hidden;\r\n        background-color: var(--primary-color);\r\n        color: var(--text-color-light);\r\n        border: none;\r\n        border-radius: 4px;\r\n        padding: 10px 15px;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n        transition: box-shadow var(--transition-duration);\r\n        box-shadow: 0 10px 20px -10px rgba(26, 92, 255, 0.5);\r\n      }\r\n\r\n      .ex-button.dark {\r\n        background-color: var(--primary-color);\r\n        color: var(--text-color-dark);\r\n      }\r\n\r\n      .ripple {\r\n        position: absolute;\r\n        background: rgba(0, 0, 0, 0.3);\r\n        border-radius: 50%;\r\n        transform: scale(0);\r\n        animation: ripple-animation 0.8s linear;\r\n        pointer-events: none;\r\n      }\r\n\r\n      @keyframes ripple-animation {\r\n        to {\r\n          transform: scale(4);\r\n          opacity: 0;\r\n        }\r\n      }\r\n    `;\r\n\r\n    shadow.appendChild(style);\r\n    shadow.appendChild(button);\r\n  }\r\n\r\n  createRipple(event) {\r\n    const button = this.shadowRoot.querySelector('.ex-button');\r\n    const ripple = document.createElement('span');\r\n    ripple.classList.add('ripple');\r\n\r\n    const rect = button.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    ripple.style.width = ripple.style.height = `${size}px`;\r\n    ripple.style.left = `${event.clientX - rect.left - size / 2}px`;\r\n    ripple.style.top = `${event.clientY - rect.top - size / 2}px`;\r\n\r\n    button.appendChild(ripple);\r\n\r\n    ripple.addEventListener('animationend', () => {\r\n      ripple.remove();\r\n    });\r\n  }\r\n\r\n  toggleDarkMode() {\r\n    const isDarkMode = document.body.classList.toggle('dark-mode');\r\n    this.toggleAttribute('dark', isDarkMode); // Set the dark attribute\r\n  }\r\n}\r\n\r\ncustomElements.define('ex-button', ExButton);\r\nexport default ExButton;\r\n","class ExDropdown extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    const shadow = this.attachShadow({ mode: 'open' });\r\n\r\n    const select = document.createElement('select');\r\n    const options = this.getAttribute('options').split(',');\r\n\r\n    options.forEach(optionText => {\r\n      const option = document.createElement('option');\r\n      option.textContent = optionText.trim();\r\n      select.appendChild(option);\r\n    });\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        --background-light: rgba(26, 92, 255, 0.05); /* Light mode background */\r\n        --text-light: black;\r\n        --background-dark: rgba(0, 0, 0, 0.6); /* Dark mode background */\r\n        --text-dark: white;\r\n        --border-color: rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      :host([dark]) {\r\n        --background: var(--background-dark);\r\n        --text: var(--text-dark);\r\n      }\r\n\r\n      :host(:not([dark])) {\r\n        --background: var(--background-light);\r\n        --text: var(--text-light);\r\n      }\r\n\r\n      select {\r\n        background-color: var(--background);\r\n        color: var(--text);\r\n        border: 2px solid var(--border-color);\r\n        border-radius: 4px;\r\n        padding: 10px;\r\n        transition: background-color 0.3s, color 0.3s, border-color 0.3s;\r\n      }\r\n\r\n      select:hover {\r\n        border-color: rgba(26, 92, 255, 0.5);\r\n      }\r\n\r\n      .vs-select__label {\r\n        color: var(--text);\r\n      }\r\n\r\n      .vs-icon-arrow {\r\n        color: var(--text);\r\n      }\r\n\r\n      .vs-select__options {\r\n        background: var(--background);\r\n        border-radius: 4px;\r\n        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      .vs-select__option:hover {\r\n        background: rgba(26, 92, 255, 0.2);\r\n        color: var(--text);\r\n      }\r\n    `;\r\n\r\n    shadow.appendChild(style);\r\n    shadow.appendChild(select);\r\n  }\r\n\r\n  toggleDarkMode() {\r\n    this.toggleAttribute('dark');\r\n  }\r\n}\r\n\r\ncustomElements.define('ex-dropdown', ExDropdown);\r\nexport default ExDropdown;\r\n"],"names":["ExButton","HTMLElement","constructor","super","shadow","this","attachShadow","mode","button","document","createElement","classList","add","textContent","getAttribute","addEventListener","event","createRipple","toggleDarkMode","style","appendChild","shadowRoot","querySelector","ripple","rect","getBoundingClientRect","size","Math","max","width","height","left","clientX","top","clientY","remove","isDarkMode","body","toggle","toggleAttribute","customElements","define","ExDropdown","select","split","forEach","optionText","option","trim"],"mappings":"kPAAA,MAAMA,UAAiBC,YACrB,WAAAC,GACEC,QACA,MAAMC,EAASC,KAAKC,aAAa,CAAEC,KAAM,SAEnCC,EAASC,SAASC,cAAc,UACtCF,EAAOG,UAAUC,IAAI,aAGrBJ,EAAOK,YAAcR,KAAKS,aAAa,UAAY,WAGnDN,EAAOO,iBAAiB,SAAUC,IAChCX,KAAKY,aAAaD,GAClBX,KAAKa,gBAAgB,IAGvB,MAAMC,EAAQV,SAASC,cAAc,SACrCS,EAAMN,YAAc,04CAkDpBT,EAAOgB,YAAYD,GACnBf,EAAOgB,YAAYZ,EACpB,CAED,YAAAS,CAAaD,GACX,MAAMR,EAASH,KAAKgB,WAAWC,cAAc,cACvCC,EAASd,SAASC,cAAc,QACtCa,EAAOZ,UAAUC,IAAI,UAErB,MAAMY,EAAOhB,EAAOiB,wBACdC,EAAOC,KAAKC,IAAIJ,EAAKK,MAAOL,EAAKM,QACvCP,EAAOJ,MAAMU,MAAQN,EAAOJ,MAAMW,OAAS,GAAGJ,MAC9CH,EAAOJ,MAAMY,KAAUf,EAAMgB,QAAUR,EAAKO,KAAOL,EAAO,EAAtC,KACpBH,EAAOJ,MAAMc,IAASjB,EAAMkB,QAAUV,EAAKS,IAAMP,EAAO,EAArC,KAEnBlB,EAAOY,YAAYG,GAEnBA,EAAOR,iBAAiB,gBAAgB,KACtCQ,EAAOY,QAAQ,GAElB,CAED,cAAAjB,GACE,MAAMkB,EAAa3B,SAAS4B,KAAK1B,UAAU2B,OAAO,aAClDjC,KAAKkC,gBAAgB,OAAQH,EAC9B,EAGHI,eAAeC,OAAO,YAAazC,GChGnC,MAAM0C,UAAmBzC,YACvB,WAAAC,GACEC,QACA,MAAMC,EAASC,KAAKC,aAAa,CAAEC,KAAM,SAEnCoC,EAASlC,SAASC,cAAc,UACtBL,KAAKS,aAAa,WAAW8B,MAAM,KAE3CC,SAAQC,IACd,MAAMC,EAAStC,SAASC,cAAc,UACtCqC,EAAOlC,YAAciC,EAAWE,OAChCL,EAAOvB,YAAY2B,EAAO,IAG5B,MAAM5B,EAAQV,SAASC,cAAc,SACrCS,EAAMN,YAAc,0xCAoDpBT,EAAOgB,YAAYD,GACnBf,EAAOgB,YAAYuB,EACpB,CAED,cAAAzB,GACEb,KAAKkC,gBAAgB,OACtB,EAGHC,eAAeC,OAAO,cAAeC"}